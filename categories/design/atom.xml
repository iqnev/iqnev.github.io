<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design on Codes are a puzzle</title>
    <link>https://iqnev.github.io/categories/design/</link>
    <description>Recent content in Design on Codes are a puzzle</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://iqnev.github.io/categories/design/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The impact of the right technology and architecture on project success</title>
      <link>https://iqnev.github.io/posts/the-impact-of-the-right-technology-and-architecture-on-project-success/</link>
      <pubDate>Sat, 23 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://iqnev.github.io/posts/the-impact-of-the-right-technology-and-architecture-on-project-success/</guid>
      <description>In this post, we will journey through my personal experiences that underscore the critical role played by apt technology and architecture in project outcomes. We will see why getting these aspects right from the get-go is of paramount importance.&#xA;Story I had the opportunity to dive into the fascinating world of parking and traffic systems â€“ a field ripe with potential for IoT/IIoT solutions. This was a dream-come-true opportunity for me, reminiscent of my high school days tinkering with electronics and microcontrollers.</description>
    </item>
    <item>
      <title>Why we discarded Reactive systems architecture from our code?</title>
      <link>https://iqnev.github.io/posts/why-we-discarded-reactive-systems-architecture-from-our-code/</link>
      <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://iqnev.github.io/posts/why-we-discarded-reactive-systems-architecture-from-our-code/</guid>
      <description>This article explores our decision to move away from reactive architecture in our software project. We&amp;rsquo;ll delve into the core principles of reactive systems, the benefits of non-blocking I/O, and the challenges we faced with a reactive approach.&#xA;Understanding Reactive architecture style Reactive encompasses a set of principles and guidelines aimed at constructing responsive distributed systems and applications, characterized by:&#xA;Responsiveness: Capable of swiftly handling requests, even under heavy loads. Resilience: Able to recover from failures with minimal downtime.</description>
    </item>
    <item>
      <title>The Challenge of Evolving Schemas in Message Queues</title>
      <link>https://iqnev.github.io/posts/the-challenge-of-evolving-schemas-in-message-queues/</link>
      <pubDate>Sun, 18 Feb 2024 11:04:18 +0300</pubDate>
      <guid>https://iqnev.github.io/posts/the-challenge-of-evolving-schemas-in-message-queues/</guid>
      <description>In systems built on message queues like RabbitMQ or Pub/Sub, schema evolution is inevitable. It allows you to adapt to changing needs and add new features, but it can also introduce challenges. When updating schemas, ensuring a smooth transition is crucial to avoid disrupting existing processes and consumers. Let&amp;rsquo;s explore a scenario where your schema undergoes significant changes:&#xA;Initial Payload (Version 1.0):&#xA;1{ 2 &amp;#34;eventType&amp;#34;: &amp;#34;user_created&amp;#34;, 3 &amp;#34;version&amp;#34;: &amp;#34;1.0&amp;#34;, 4 &amp;#34;timestamp&amp;#34;: &amp;#34;2024-01-15T08:00:00Z&amp;#34;, 5 &amp;#34;data&amp;#34;: { 6 &amp;#34;id&amp;#34;: &amp;#34;123456789&amp;#34;, 7 &amp;#34;username&amp;#34;: &amp;#34;john_doe&amp;#34;, 8 &amp;#34;name&amp;#34;: &amp;#34;John Doe&amp;#34;, 9 &amp;#34;email&amp;#34;: &amp;#34;john.</description>
    </item>
  </channel>
</rss>
