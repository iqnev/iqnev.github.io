<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CDI on Codes are a puzzle</title>
    <link>https://iqnev.github.io/tags/cdi/</link>
    <description>Recent content in CDI on Codes are a puzzle</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 26 Sep 2023 23:04:18 +0300</lastBuildDate><atom:link href="https://iqnev.github.io/tags/cdi/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Demystifying Quarkus Extension Development: Jandex vs. AdditionalBeanBuildItem</title>
      <link>https://iqnev.github.io/posts/jandex-vs-additional-bean-builditem/</link>
      <pubDate>Tue, 26 Sep 2023 23:04:18 +0300</pubDate>
      
      <guid>https://iqnev.github.io/posts/jandex-vs-additional-bean-builditem/</guid>
      <description>Welcome to a comprehensive exploration of two key aspects in Quarkus extension development: Jandex and AdditionalBeanBuildItem. This article aims to elucidate the differences between these approaches, offering insights into their roles, applications, and the intricate interplay between them. By the end, you&amp;rsquo;ll have a clear understanding of how to wield these tools effectively in your Quarkus extensions.
1. Jandex: Automatic Bean Discovery and Indexing Understanding Jandex and Its Role: In the realm of Quarkus extensions, beans are the building blocks of functionality, and Contexts and Dependency Injection (CDI) is the mechanism that governs their management.</description>
    </item>
    
  </channel>
</rss>
