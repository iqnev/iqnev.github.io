{
  "version": "https://jsonfeed.org/version/1",
  "title": "Codes are a puzzle",
  "home_page_url": "https://iqnev.github.io/",
  "feed_url": "https://iqnev.github.io/feed.json",
  "description": "A minimal hugo theme focus on content",
  "favicon": "https://iqnev.github.io//assets/favicon.ico",
  "expired": false,
  "author": {
    "name": "Calvin Tran",
    "url": "https://iqnev.github.io/"
  },
  "items": [
    
    

    
    {
      "id": "4c0c620a7d2e99873f3b1e8dbf886066d9d07e07",
      "title": "Creating Custom Configuration in Quarkus Loaded from JSON File",
      "summary": "",
      "content_text": "Introduction Quarkus, a framework for building lightweight, fast, and efficient Java applications, offers developers the flexibility to create custom configurations loaded from JSON files. These custom configurations can be seamlessly integrated into your Quarkus application, enhancing its configurability and adaptability. To achieve this, Quarkus utilizes Eclipse MicroProfile Config ( MP-Config), with the SmallRye implementation providing the necessary tools. In this article, we\u0026rsquo;ll delve into the process of crafting custom configurations and loading them from JSON files within Quarkus, all while exploring the mechanics of SmallRye\u0026rsquo;s MP-Config implementation. Additionally, we\u0026rsquo;ll showcase the creation and registration of a custom ConfigSource and ConfigSourceFactory, which play a pivotal role in this configuration management approach.\nUnderstanding MicroProfile Config in Quarkus Quarkus internally relies on the SmallRye implementation of MP-Config. This implementation allows developers to incorporate Configuration Sources, which provide configuration data from various origins. These sources can be files with non-standard formats, or even data retrieved from a central repository. MP-Config ensures a deterministic ordering of configuration sources based on their ordinal values when multiple sources contain the same configuration key.\nSmallRye\u0026rsquo;s implementation of MP-Config facilitates the creation of new ConfigSources and ConfigSourceFactories. The ConfigSourceFactory has knowledge of all previously defined sources, enabling developers to read those values and pass them to a newly created ConfigSource. The registration of these custom sources and factories is accomplished through the Java ServiceLoader interface, with a specific file called io.smallrye.config.ConfigSourceFactory being placed in the META-INF/services/ directory. This file provides the fully qualified names of the custom sources and factories.\nImplementing a custom JSON Configuration To demonstrate the creation and registration of a custom ConfigSource and ConfigSourceFactory in Quarkus, we\u0026rsquo;ll focus on a practical example - an JsonConfigSource and JsonConfigSourceFactory pair. This custom configuration source allows you to read external JSON configuration files and integrate them into your Quarkus application.\nThe JsonConfigSource class is responsible for reading and providing configuration properties from a JSON file. It implements the ConfigSource interface and overrides several methods to interact with the Quarkus configuration system.\nHere is an overview of its key functionalities:\nReading a JSON file and parsing it into a JsonObject. Providing configuration properties, including handling default values. Specifying the source\u0026rsquo;s ordinal value. Assigning a unique name to the source, which will be used for registration. @Slf4j public class JsonConfigSource implements ConfigSource { private final Map\u0026lt;String, ConfigValue\u0026gt; existingValues; private JsonObject root; public JsonConfigSource(final Map\u0026lt;String, ConfigValue\u0026gt; exProp) { existingValues = exProp; } public void addJsonConfigurations(final ConfigValue config) { final File file = new File(config.getValue()); if (!file.canRead()) { log.warn(\u0026#34;Can\u0026#39;t read config from \u0026#34; + file.getAbsolutePath() + \u0026#34;\u0026#34;); } else { try (final InputStream fis = new FileInputStream(file); final JsonReader reader = Json.createReader(fis)) { root = reader.readObject(); } catch (final IOException ioe) { log.warn(\u0026#34;Reading the config failed: \u0026#34; + ioe.getMessage()); } } } @Override public Map\u0026lt;String, String\u0026gt; getProperties() { final Map\u0026lt;String, String\u0026gt; props = new HashMap\u0026lt;\u0026gt;(); final Set\u0026lt;Map.Entry\u0026lt;String, ConfigValue\u0026gt;\u0026gt; entries = existingValues.entrySet(); for (final Map.Entry\u0026lt;String, ConfigValue\u0026gt; entry : entries) { String newVal = getValue(entry.getKey()); if (newVal == null) { newVal = entry.getValue().getValue(); } props.put(entry.getKey(), newVal); } return props; } @Override public Set\u0026lt;String\u0026gt; getPropertyNames() { return existingValues.keySet(); } @Override public int getOrdinal() { return 270; } @Override public String getValue(final String configKey) { final JsonValue jsonValue = root.get(configKey); if (jsonValue != null) { return getStringValue(jsonValue); } if (existingValues.containsKey(configKey)) { return existingValues.get(configKey).getValue(); } else { return null; } } @Override public String getName() { return \u0026#34;EXTERNAL_JSON\u0026#34;; } private String getStringValue(final JsonValue jsonValue) { if (jsonValue != null) { final JsonValue.ValueType valueType = jsonValue.getValueType(); if (valueType == JsonValue.ValueType.STRING) { return ((JsonString) jsonValue).getString(); } else if (valueType == JsonValue.ValueType.NUMBER) { // Handle integer and floating-point numbers return jsonValue.toString(); } else if (valueType == JsonValue.ValueType.TRUE || valueType == JsonValue.ValueType.FALSE) { // Handle boolean values return Boolean.toString(jsonValue.getValueType() == JsonValue.ValueType.TRUE); } else if (valueType == JsonValue.ValueType.NULL) { // Handle null values return null; } } return null; } } The JsonConfigSourceFactory class is a custom ConfigSourceFactory responsible for creating and configuring instances of the JsonConfigSource. It also defines a unique priority for this factory.\nHere is an overview of its key functionalities:\nRetrieving the path of the JSON configuration file from the Quarkus configuration. Building an instance of JsonConfigSource. Assigning a priority value to the factory. @Slf4j public class JsonConfigSourceFactory implements ConfigSourceFactory { public static final String CONFIG_JSON_FILE = \u0026#34;config.json.file\u0026#34;; @Override public Iterable\u0026lt;ConfigSource\u0026gt; getConfigSources(final ConfigSourceContext configSourceContext) { final ConfigValue value = configSourceContext.getValue(CONFIG_JSON_FILE); if (value == null || value.getValue() == null) { return Collections.emptyList(); } final Map\u0026lt;String, ConfigValue\u0026gt; exProp = new HashMap\u0026lt;\u0026gt;(); final Iterator\u0026lt;String\u0026gt; stringIterator = configSourceContext.iterateNames(); while (stringIterator.hasNext()) { final String key = stringIterator.next(); final ConfigValue cValue = configSourceContext.getValue(key); exProp.put(key, cValue); } final JsonConfigSource configSource = new JsonConfigSource(exProp); final List\u0026lt;ConfigValue\u0026gt; configValueList = List.of(value); for (final ConfigValue config : configValueList) { if (ConfigExists(config)) { configSource.addJsonConfigurations(config); } } return Collections.singletonList(configSource); } @Override public OptionalInt getPriority() { return OptionalInt.of(270); } private boolean ConfigExists(final ConfigValue config) { if (config == null || config.getValue() == null) { log.warn(\u0026#34;The given ConfigValue object is null\u0026#34;); return false; } else if (!(Files.exists(Path.of(config.getValue())))) { return false; } return true; } } Registration via ServiceLoader Both the JsonConfigSource and JsonConfigSourceFactory are registered with the Quarkus application through the Java ServiceLoader mechanism. A file named io.smallrye.config.ConfigSourceFactory is placed in the META-INF/services/ directory. This file contains the fully qualified name of the JsonConfigSourceFactory, enabling Quarkus to discover and use it.\nThe JSON file { \u0026#34;simple.service\u0026#34;: \u0026#34;pusher\u0026#34;, \u0026#34;simple.source\u0026#34;: \u0026#34;source\u0026#34;, \u0026#34;simple.destination\u0026#34;: \u0026#34;destination\u0026#34; } Define Your Configuration Interface @ConfigMapping(prefix = \u0026#34;simple\u0026#34;) public interface SimpleConfig { @WithName(\u0026#34;source\u0026#34;) String source(); @WithName(\u0026#34;service\u0026#34;) String service(); @WithName(\u0026#34;destination\u0026#34;) String destination(); } Conclusion Eclipse MicroProfile Config, in conjunction with the SmallRye implementation, empowers Quarkus developers to manage their application\u0026rsquo;s configuration efficiently. The ability to create and register custom ConfigSources and ConfigSourceFactories, as demonstrated with the JsonConfigSource and JsonConfigSourceFactory, extends the flexibility and utility of the framework. By following these guidelines, you can seamlessly integrate external configuration data, such as JSON files, into your Quarkus application, enhancing its configurability and adaptability.\nBy understanding these concepts and leveraging the power of MicroProfile Config, you can further optimize your Quarkus application\u0026rsquo;s configuration management and streamline the development process.\nThe full source code is available at Github\n",
      "content_html": "\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eQuarkus, a framework for building lightweight, fast, and efficient Java applications, offers\ndevelopers the flexibility to create custom configurations loaded from JSON files. These custom\nconfigurations can be seamlessly integrated into your Quarkus application, enhancing its\nconfigurability and adaptability. To achieve this, Quarkus utilizes Eclipse MicroProfile Config (\nMP-Config), with the SmallRye implementation providing the necessary tools. In this article, we\u0026rsquo;ll\ndelve into the process of crafting custom configurations and loading them from JSON files within\nQuarkus, all while exploring the mechanics of SmallRye\u0026rsquo;s MP-Config implementation. Additionally,\nwe\u0026rsquo;ll showcase the creation and registration of a custom ConfigSource and ConfigSourceFactory, which\nplay a pivotal role in this configuration management approach.\u003c/p\u003e\n\u003ch3 id=\"understanding-microprofile-config-in-quarkus\"\u003eUnderstanding MicroProfile Config in Quarkus\u003c/h3\u003e\n\u003cp\u003eQuarkus internally relies on the SmallRye implementation of MP-Config. This implementation allows\ndevelopers to incorporate Configuration Sources, which provide configuration data from various\norigins. These sources can be files with non-standard formats, or even data retrieved from a central\nrepository. MP-Config ensures a deterministic ordering of configuration sources based on their\nordinal values when multiple sources contain the same configuration key.\u003c/p\u003e\n\u003cp\u003eSmallRye\u0026rsquo;s implementation of MP-Config facilitates the creation of new ConfigSources and\nConfigSourceFactories. The ConfigSourceFactory has knowledge of all previously defined sources,\nenabling developers to read those values and pass them to a newly created ConfigSource. The\nregistration of these custom sources and factories is accomplished through the Java ServiceLoader\ninterface, with a specific file called \u003ccode\u003eio.smallrye.config.ConfigSourceFactory\u003c/code\u003e being placed in the\n\u003ccode\u003eMETA-INF/services/\u003c/code\u003e directory. This file provides the fully qualified names of the custom sources\nand\nfactories.\u003c/p\u003e\n\u003ch3 id=\"implementing-a-custom-json-configuration\"\u003eImplementing a custom JSON Configuration\u003c/h3\u003e\n\u003cp\u003eTo demonstrate the creation and registration of a custom \u003ccode\u003eConfigSource\u003c/code\u003e and \u003ccode\u003eConfigSourceFactory\u003c/code\u003e in\nQuarkus, we\u0026rsquo;ll focus on a practical example - an \u003ccode\u003eJsonConfigSource\u003c/code\u003e and \u003ccode\u003eJsonConfigSourceFactory\u003c/code\u003e\npair.\nThis custom configuration source allows you to read external JSON configuration files and integrate\nthem into your Quarkus application.\u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003eJsonConfigSource\u003c/code\u003e class is responsible for reading and providing configuration properties from\na JSON file. It implements the \u003ccode\u003eConfigSource\u003c/code\u003e interface and overrides several methods to interact\nwith\nthe Quarkus configuration system.\u003c/p\u003e\n\u003cp\u003eHere is an overview of its key functionalities:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eReading a JSON file and parsing it into a JsonObject.\u003c/li\u003e\n\u003cli\u003eProviding configuration properties, including handling default values.\u003c/li\u003e\n\u003cli\u003eSpecifying the source\u0026rsquo;s ordinal value.\u003c/li\u003e\n\u003cli\u003eAssigning a unique name to the source, which will be used for registration.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75af00\"\u003e@Slf4j\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#00a8c8\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003eJsonConfigSource\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003eimplements\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eConfigSource\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#00a8c8\"\u003eprivate\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eMap\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eConfigValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eexistingValues\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#00a8c8\"\u003eprivate\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eJsonObject\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eroot\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#00a8c8\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003eJsonConfigSource\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eMap\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eConfigValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eexProp\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#111\"\u003eexistingValues\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eexProp\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#00a8c8\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003eaddJsonConfigurations\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eConfigValue\u003c/span\u003e \u003cspan style=\"color:#111\"\u003econfig\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eFile\u003c/span\u003e \u003cspan style=\"color:#111\"\u003efile\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003enew\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eFile\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003econfig\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003egetValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e());\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(!\u003c/span\u003e\u003cspan style=\"color:#111\"\u003efile\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003ecanRead\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e())\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#111\"\u003elog\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003ewarn\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#d88200\"\u003e\u0026#34;Can\u0026#39;t read config from \u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e \u003cspan style=\"color:#111\"\u003efile\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003egetAbsolutePath\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e \u003cspan style=\"color:#d88200\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003eelse\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#00a8c8\"\u003etry\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eInputStream\u003c/span\u003e \u003cspan style=\"color:#111\"\u003efis\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003enew\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eFileInputStream\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003efile\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eJsonReader\u003c/span\u003e \u003cspan style=\"color:#111\"\u003ereader\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eJson\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003ecreateReader\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003efis\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e))\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#111\"\u003eroot\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#111\"\u003ereader\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003ereadObject\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003ecatch\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eIOException\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eioe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#111\"\u003elog\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003ewarn\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#d88200\"\u003e\u0026#34;Reading the config failed: \u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eioe\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003egetMessage\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e());\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75af00\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#00a8c8\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eMap\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003egetProperties\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eMap\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eprops\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003enew\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eHashMap\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026gt;();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eSet\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eMap\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eEntry\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eConfigValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eentries\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eexistingValues\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eentrySet\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003efor\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eMap\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eEntry\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eConfigValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eentry\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eentries\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e \u003cspan style=\"color:#111\"\u003enewVal\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#111\"\u003egetValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eentry\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003egetKey\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e());\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#00a8c8\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003enewVal\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003enull\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#111\"\u003enewVal\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eentry\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003egetValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e().\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003egetValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#111\"\u003eprops\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eput\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eentry\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003egetKey\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(),\u003c/span\u003e \u003cspan style=\"color:#111\"\u003enewVal\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eprops\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75af00\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#00a8c8\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eSet\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003egetPropertyNames\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eexistingValues\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003ekeySet\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75af00\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#00a8c8\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003eint\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003egetOrdinal\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e270\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75af00\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#00a8c8\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003egetValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e \u003cspan style=\"color:#111\"\u003econfigKey\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eJsonValue\u003c/span\u003e \u003cspan style=\"color:#111\"\u003ejsonValue\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eroot\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eget\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003econfigKey\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003ejsonValue\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e!=\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003enull\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#00a8c8\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#111\"\u003egetStringValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003ejsonValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eexistingValues\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003econtainsKey\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003econfigKey\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e))\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#00a8c8\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eexistingValues\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eget\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003econfigKey\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e).\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003egetValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003eelse\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#00a8c8\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003enull\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75af00\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#00a8c8\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003egetName\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#d88200\"\u003e\u0026#34;EXTERNAL_JSON\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#00a8c8\"\u003eprivate\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003egetStringValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eJsonValue\u003c/span\u003e \u003cspan style=\"color:#111\"\u003ejsonValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003ejsonValue\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e!=\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003enull\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eJsonValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eValueType\u003c/span\u003e \u003cspan style=\"color:#111\"\u003evalueType\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#111\"\u003ejsonValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003egetValueType\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#00a8c8\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003evalueType\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eJsonValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eValueType\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eSTRING\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#00a8c8\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e((\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eJsonString\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#111\"\u003ejsonValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e).\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003egetString\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003eelse\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003evalueType\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eJsonValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eValueType\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eNUMBER\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#75715e\"\u003e// Handle integer and floating-point numbers\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#00a8c8\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#111\"\u003ejsonValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003etoString\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003eelse\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003evalueType\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eJsonValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eValueType\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eTRUE\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e||\u003c/span\u003e \u003cspan style=\"color:#111\"\u003evalueType\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eJsonValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eValueType\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eFALSE\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#75715e\"\u003e// Handle boolean values\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#00a8c8\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eBoolean\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003etoString\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003ejsonValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003egetValueType\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eJsonValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eValueType\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eTRUE\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003eelse\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003evalueType\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eJsonValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eValueType\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eNULL\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#75715e\"\u003e// Handle null values\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#00a8c8\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003enull\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003enull\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe \u003ccode\u003eJsonConfigSourceFactory\u003c/code\u003e class is a custom \u003ccode\u003eConfigSourceFactory\u003c/code\u003e responsible for creating and\nconfiguring instances of the \u003ccode\u003eJsonConfigSource\u003c/code\u003e. It also defines a unique priority for this factory.\u003c/p\u003e\n\u003cp\u003eHere is an overview of its key functionalities:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eRetrieving the path of the JSON configuration file from the Quarkus configuration.\u003c/li\u003e\n\u003cli\u003eBuilding an instance of JsonConfigSource.\u003c/li\u003e\n\u003cli\u003eAssigning a priority value to the factory.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75af00\"\u003e@Slf4j\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#00a8c8\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003eJsonConfigSourceFactory\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003eimplements\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eConfigSourceFactory\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#00a8c8\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003estatic\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eCONFIG_JSON_FILE\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#d88200\"\u003e\u0026#34;config.json.file\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75af00\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#00a8c8\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eIterable\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eConfigSource\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003egetConfigSources\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eConfigSourceContext\u003c/span\u003e \u003cspan style=\"color:#111\"\u003econfigSourceContext\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eConfigValue\u003c/span\u003e \u003cspan style=\"color:#111\"\u003evalue\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#111\"\u003econfigSourceContext\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003egetValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eCONFIG_JSON_FILE\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003evalue\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003enull\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e||\u003c/span\u003e \u003cspan style=\"color:#111\"\u003evalue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003egetValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003enull\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#00a8c8\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eCollections\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eemptyList\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eMap\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eConfigValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eexProp\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003enew\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eHashMap\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026gt;();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eIterator\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#111\"\u003estringIterator\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#111\"\u003econfigSourceContext\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eiterateNames\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003ewhile\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003estringIterator\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003ehasNext\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e())\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e \u003cspan style=\"color:#111\"\u003ekey\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#111\"\u003estringIterator\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003enext\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eConfigValue\u003c/span\u003e \u003cspan style=\"color:#111\"\u003ecValue\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#111\"\u003econfigSourceContext\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003egetValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003ekey\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#111\"\u003eexProp\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eput\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003ekey\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#111\"\u003ecValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eJsonConfigSource\u003c/span\u003e \u003cspan style=\"color:#111\"\u003econfigSource\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003enew\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eJsonConfigSource\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eexProp\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eList\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eConfigValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#111\"\u003econfigValueList\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eList\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eof\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003evalue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003efor\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eConfigValue\u003c/span\u003e \u003cspan style=\"color:#111\"\u003econfig\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#111\"\u003econfigValueList\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#00a8c8\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eConfigExists\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003econfig\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e))\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#111\"\u003econfigSource\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eaddJsonConfigurations\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003econfig\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eCollections\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003esingletonList\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003econfigSource\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75af00\"\u003e@Override\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#00a8c8\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eOptionalInt\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003egetPriority\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eOptionalInt\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eof\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e270\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#00a8c8\"\u003eprivate\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003eboolean\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003eConfigExists\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#00a8c8\"\u003efinal\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eConfigValue\u003c/span\u003e \u003cspan style=\"color:#111\"\u003econfig\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003econfig\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003enull\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e||\u003c/span\u003e \u003cspan style=\"color:#111\"\u003econfig\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003egetValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003enull\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#111\"\u003elog\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003ewarn\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#d88200\"\u003e\u0026#34;The given ConfigValue object is null\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#00a8c8\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003efalse\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003eelse\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e(!(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eFiles\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eexists\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003ePath\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003eof\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003econfig\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\u003cspan style=\"color:#75af00\"\u003egetValue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e()))))\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#00a8c8\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003efalse\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003etrue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"registration-via-serviceloader\"\u003eRegistration via ServiceLoader\u003c/h3\u003e\n\u003cp\u003eBoth the \u003ccode\u003eJsonConfigSource\u003c/code\u003e and \u003ccode\u003eJsonConfigSourceFactory\u003c/code\u003e are registered with the Quarkus\napplication through the Java ServiceLoader mechanism. A file\nnamed \u003ccode\u003eio.smallrye.config.ConfigSourceFactory\u003c/code\u003e is placed in the \u003ccode\u003eMETA-INF/services/\u003c/code\u003e directory. This\nfile contains the fully qualified name of the \u003ccode\u003eJsonConfigSourceFactory\u003c/code\u003e, enabling Quarkus to\ndiscover\nand use it.\u003c/p\u003e\n\u003ch3 id=\"the-json-file\"\u003eThe JSON file\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#111\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e\u0026#34;simple.service\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#111\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#d88200\"\u003e\u0026#34;pusher\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#111\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e\u0026#34;simple.source\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#111\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#d88200\"\u003e\u0026#34;source\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#111\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e\u0026#34;simple.destination\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#111\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#d88200\"\u003e\u0026#34;destination\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#111\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"define-your-configuration-interface\"\u003eDefine Your Configuration Interface\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75af00\"\u003e@ConfigMapping\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eprefix\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#d88200\"\u003e\u0026#34;simple\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#00a8c8\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003einterface\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003eSimpleConfig\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75af00\"\u003e@WithName\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#d88200\"\u003e\u0026#34;source\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003esource\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75af00\"\u003e@WithName\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#d88200\"\u003e\u0026#34;service\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003eservice\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75af00\"\u003e@WithName\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#d88200\"\u003e\u0026#34;destination\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003edestination\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"conclusion\"\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eEclipse MicroProfile Config, in conjunction with the SmallRye implementation, empowers Quarkus\ndevelopers to manage their application\u0026rsquo;s configuration efficiently. The ability to create and\nregister custom \u003ccode\u003eConfigSources\u003c/code\u003e and \u003ccode\u003eConfigSourceFactories\u003c/code\u003e, as demonstrated with\nthe \u003ccode\u003eJsonConfigSource\u003c/code\u003e\nand \u003ccode\u003eJsonConfigSourceFactory\u003c/code\u003e, extends the flexibility and utility of the framework. By following\nthese guidelines, you can seamlessly integrate external configuration data, such as JSON files, into\nyour Quarkus application, enhancing its configurability and adaptability.\u003c/p\u003e\n\u003cp\u003eBy understanding these concepts and leveraging the power of MicroProfile Config, you can further\noptimize your Quarkus application\u0026rsquo;s configuration management and streamline the development process.\u003c/p\u003e\n\u003cp\u003eThe full source code is available at \u003ca href=\"https://github.com/iqnev/quarkus-load-configuration-from-externa-json-file\" title=\"Title\"\u003eGithub\u003c/a\u003e\u003c/p\u003e\n",
      "url": "https://iqnev.github.io/posts/load-configuration-from-json-file/",
      "date_published": "14106-14-09T100:1414:00+03:00",
      "date_modified": "14106-14-09T100:1414:00+03:00",
      "author": {
        "name": "Calvin Tran",
        "url": "https://iqnev.github.io/"
      }
    },
    
    {
      "id": "d8121afede58861489c854fcdd26839c8a105ec6",
      "title": "Extending Quarkus: When and How to Write Your Own Extensions",
      "summary": "",
      "content_text": "Quarkus, with its innovative extension framework, offers developers a powerful way to integrate various technologies seamlessly into their applications. These extensions simplify configuration, enable dependency injection, and optimize performance, making it an attractive option for Java developers. However, before diving into creating your own Quarkus extension, it\u0026rsquo;s crucial to understand when it\u0026rsquo;s necessary and how to do it effectively.\nWhen to Create a Quarkus Extension Complex Integrations: If you\u0026rsquo;re working with complex frameworks like ORM mappers, reactive clients, or data access libraries, creating an extension can help manage the intricacies of configuration and dependency management. Extensions simplify the use of these frameworks in Quarkus applications.\nPerformance Optimization: Quarkus extensions are designed to align with Quarkus\u0026rsquo; native compilation, resulting in applications that start swiftly and have minimal memory footprints. By creating an extension, you can leverage Quarkus\u0026rsquo; build-time optimization abilities to scan dependencies and generate configuration early, thus avoiding startup delays.\nDeveloper Experience Enhancement: Extensions can significantly enhance the developer experience. They enable live reloading, CLI extensions, templating, and more, streamlining the development process. If you want to provide a seamless and efficient development environment for your team, extensions can help achieve this goal.\nAPI Hardening: If you\u0026rsquo;re building APIs or libraries intended to be used by other Quarkus developers, extensions provide an excellent way to harden your APIs and ensure they work seamlessly within the Quarkus ecosystem.\nHowever, extensions may not always be the best approach. For simpler needs, such as sharing utility code and glue logic between components, a basic JAR file might suffice without the overhead of creating an extension. If your integration is app-specific and unlikely to be reused elsewhere, a basic JAR could be a more straightforward solution. Moreover, if you need full control over dependency versions and don\u0026rsquo;t want to adhere to Quarkus\u0026rsquo; BOM (Bill of Materials) for dependency management, a JAR may be a better choice. Finally, if your code needs to work across multiple JVM frameworks, such as Spring and Micronaut, avoiding tight coupling to Quarkus may be preferable.\nCreating Quarkus extensions can be complex, often requiring in-depth knowledge of Quarkus internal workings. However, for many scenarios, creating a standard JAR can be sufficient. This JAR, when indexed by Jandex, can be seamlessly discovered by Quarkus during build time. While Quarkus extensions provide a range of advantages, including superior performance and developer productivity, they may not always be necessary.\nQuarkus unique approach to moving work to build time, rather than runtime, is at the core of its fast startup times and low memory footprint. This philosophy extends to Quarkus extensions, which can leverage these build-time optimizations. Even if you\u0026rsquo;re not primarily concerned with fast boot times, the benefits of creating your extensions extend to simplifying configurations, extending the Quarkus CLI, and integrating with Quarkus\u0026rsquo;s Dev Mode.\nCreating your Quarkus extensions doesn\u0026rsquo;t have to be overly complicated. With the right approach and a clear understanding of your project\u0026rsquo;s needs, you can solve complex problems efficiently. Extensions offer a flexible and powerful way to enhance your Quarkus applications and make them more efficient and developer-friendly.\nCreating a Quarkus Extension When you decide that creating a Quarkus extension is the right approach, it\u0026rsquo;s essential to understand the structural components of an extension:\nRuntime Section: This section contains the core business logic implemented as beans, services, or other components that integrate with Quarkus; Deployment Section: The deployment section handles build-time augmentation and configuration. It ensures that your extension integrates seamlessly with Quarkus\u0026rsquo; optimization processes; Descriptor: A descriptor declares metadata about your extension, including its name, parameters, compatibility information, and more; Documentation: Comprehensive documentation should accompany your extension. It guides users on how to use and configure your extension effectively. Anatomy of the Quarkus Extension Consider a scenario where you want to create a custom caching extension for Quarkus. This extension will allow developers to easily integrate caching functionality into their Quarkus applications.\nRuntime Section:\nIn this section, you would implement the core caching functionality using Java code. This might include methods for caching data, retrieving cached data, and managing cache expiration. For example, you might have a CustomCacheService class with methods like put(key, value), get(key), and evict(key) to handle caching operations. Deployment Section:\nThe deployment section is responsible for build-time optimization. Here, you can specify how the caching configuration should be generated during the build process. For our caching extension, this section might include instructions on how to scan for cached objects in the application code and generate cache configuration. Descriptor:\nThe descriptor file (custom-cache-extension.yaml) provides metadata about your extension. It includes information like the extension\u0026rsquo;s name, version, compatibility with Quarkus, and configuration parameters. For instance, your descriptor might specify that the extension is named \u0026ldquo;custom-cache-extension,\u0026rdquo; is compatible with Quarkus 2.0+, and requires a cache timeout configuration parameter. Documentation:\nComprehensive documentation should accompany your extension. It guides users on how to use the custom caching extension effectively within their Quarkus applications. Documentation should include examples of how to configure the cache, integrate it into Quarkus services, and manage cached data. Additionally, it should provide best practices for cache utilization. By following this structure, your custom caching extension becomes a valuable tool for Quarkus developers. They can easily incorporate caching into their applications, improving performance and optimizing resource usage.\nRuntime module:\nclass CustomCacheService { // Core caching functionality using Java code public void put(String key, Object value) { // Cache data implementation } public Object get(String key) { // Retrieve cached data implementation } public void evict(String key) { // Evict cached data implementation } } Deployment module:\nclass CustomCacheProcessor { @BuildStep FeatureBuildItem feature() { // This declares the custom cache extension as a feature return new FeatureBuildItem(\u0026#34;custom-cache\u0026#34;); } } Descriptor file: custom-cache-extension.yaml\nextension: name: custom-cache-extension metadata: short-name: \u0026#34;resteasy-reactive\u0026#34; keywords: - \u0026#34;jaxrs\u0026#34; - \u0026#34;web\u0026#34; - \u0026#34;rest\u0026#34; categories: - \u0026#34;web\u0026#34; - \u0026#34;reactive\u0026#34; status: \u0026#34;stable\u0026#34; guide: \u0026#34;https://quarkus.io/guides/resteasy-reactive\u0026#34; In conclusion, whether to create a Quarkus extension depends on your project\u0026rsquo;s specific needs and objectives. Quarkus extensions are powerful tools for deep integration, performance optimization, and enhancing the developer experience. However, it\u0026rsquo;s essential to weigh the trade-offs and consider whether a simpler solution, like a standard JAR library, might better suit your use case. By understanding when and how to create Quarkus extensions effectively, you can make informed decisions and leverage the full potential of this innovative framework.\n",
      "content_html": "\u003cp\u003eQuarkus, with its innovative extension framework, offers developers a powerful way to integrate various technologies seamlessly into their applications.\nThese extensions simplify configuration, enable dependency injection, and optimize performance, making it an attractive option for Java developers.\nHowever, before diving into creating your own Quarkus extension, it\u0026rsquo;s crucial to understand when it\u0026rsquo;s necessary and how to do it effectively.\u003c/p\u003e\n\u003ch2 id=\"when-to-create-a-quarkus-extension\"\u003eWhen to Create a Quarkus Extension\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eComplex Integrations: If you\u0026rsquo;re working with complex frameworks like ORM mappers, reactive clients, or data access libraries, creating an extension can help manage the intricacies of configuration and dependency management.\nExtensions simplify the use of these frameworks in Quarkus applications.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePerformance Optimization: Quarkus extensions are designed to align with Quarkus\u0026rsquo; native compilation, resulting in applications that start swiftly and have minimal memory footprints.\nBy creating an extension, you can leverage Quarkus\u0026rsquo; build-time optimization abilities to scan dependencies and generate configuration early, thus avoiding startup delays.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDeveloper Experience Enhancement: Extensions can significantly enhance the developer experience.\nThey enable live reloading, CLI extensions, templating, and more, streamlining the development process.\nIf you want to provide a seamless and efficient development environment for your team, extensions can help achieve this goal.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAPI Hardening: If you\u0026rsquo;re building APIs or libraries intended to be used by other Quarkus developers, extensions provide an excellent way to harden your\nAPIs and ensure they work seamlessly within the Quarkus ecosystem.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eHowever, extensions may not always be the best approach. For simpler needs, such as sharing utility code and glue logic between components, a basic JAR file might\nsuffice without the overhead of creating an extension. If your integration is app-specific and unlikely to be reused elsewhere, a basic JAR could be a more straightforward solution. Moreover, if you need full control over dependency versions and don\u0026rsquo;t want to adhere to Quarkus\u0026rsquo; BOM (Bill of Materials) for dependency management, a JAR may be a better choice. Finally, if your code needs to work across multiple JVM frameworks, such as Spring and Micronaut,\navoiding tight coupling to Quarkus may be preferable.\u003c/p\u003e\n\u003cp\u003eCreating Quarkus extensions can be complex, often requiring in-depth knowledge of Quarkus internal workings. However, for many scenarios, creating a standard JAR can be sufficient. This JAR, when indexed by Jandex, can be seamlessly discovered by Quarkus during build time. While Quarkus extensions provide a range of advantages, including superior performance and developer productivity, they may not always be necessary.\u003c/p\u003e\n\u003cp\u003eQuarkus unique approach to moving work to build time, rather than runtime, is at the core of its fast startup times and low memory footprint. This philosophy extends to Quarkus extensions, which can leverage these build-time optimizations. Even if you\u0026rsquo;re not primarily concerned with fast boot times, the benefits of creating your extensions extend to simplifying configurations, extending the Quarkus CLI, and integrating with Quarkus\u0026rsquo;s Dev Mode.\u003c/p\u003e\n\u003cp\u003eCreating your Quarkus extensions doesn\u0026rsquo;t have to be overly complicated. With the right approach and a clear understanding of your project\u0026rsquo;s needs, you can solve complex problems efficiently. Extensions offer a flexible and powerful way to enhance your Quarkus applications and make them more efficient and developer-friendly.\u003c/p\u003e\n\u003ch2 id=\"creating-a-quarkus-extension\"\u003eCreating a Quarkus Extension\u003c/h2\u003e\n\u003cp\u003eWhen you decide that creating a Quarkus extension is the right approach, it\u0026rsquo;s essential to understand the structural components of an extension:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eRuntime Section:\u003c/strong\u003e This section contains the core business logic implemented as beans, services, or other components that integrate with Quarkus;\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDeployment Section:\u003c/strong\u003e The deployment section handles build-time augmentation and configuration. It ensures that your extension integrates seamlessly with Quarkus\u0026rsquo; optimization processes;\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDescriptor:\u003c/strong\u003e A descriptor declares metadata about your extension, including its name, parameters, compatibility information, and more;\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDocumentation:\u003c/strong\u003e Comprehensive documentation should accompany your extension. It guides users on how to use and configure your extension effectively.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"anatomy-of-the-quarkus-extension\"\u003eAnatomy of the Quarkus Extension\u003c/h2\u003e\n\u003cp\u003eConsider a scenario where you want to create a custom caching extension for Quarkus. This extension will allow developers to easily integrate caching functionality into their Quarkus applications.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eRuntime Section:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIn this section, you would implement the core caching functionality using Java code. This might include methods for caching data, retrieving cached data, and managing cache expiration.\u003c/li\u003e\n\u003cli\u003eFor example, you might have a \u003ccode\u003eCustomCacheService\u003c/code\u003e class with methods like \u003ccode\u003eput(key, value)\u003c/code\u003e, \u003ccode\u003eget(key)\u003c/code\u003e, and \u003ccode\u003eevict(key)\u003c/code\u003e to handle caching operations.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eDeployment Section:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe deployment section is responsible for build-time optimization. Here, you can specify how the caching configuration should be generated during the build process.\u003c/li\u003e\n\u003cli\u003eFor our caching extension, this section might include instructions on how to scan for cached objects in the application code and generate cache configuration.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eDescriptor:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe descriptor file (\u003ccode\u003ecustom-cache-extension.yaml\u003c/code\u003e) provides metadata about your extension. It includes information like the extension\u0026rsquo;s name, version, compatibility with Quarkus, and configuration parameters.\u003c/li\u003e\n\u003cli\u003eFor instance, your descriptor might specify that the extension is named \u0026ldquo;custom-cache-extension,\u0026rdquo; is compatible with Quarkus 2.0+, and requires a cache timeout configuration parameter.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eDocumentation:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eComprehensive documentation should accompany your extension. It guides users on how to use the custom caching extension effectively within their Quarkus applications.\u003c/li\u003e\n\u003cli\u003eDocumentation should include examples of how to configure the cache, integrate it into Quarkus services, and manage cached data. Additionally, it should provide best practices for cache utilization.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eBy following this structure, your custom caching extension becomes a valuable tool for Quarkus developers. They can easily incorporate caching into their applications, improving performance and optimizing resource usage.\u003c/p\u003e\n\u003cp\u003eRuntime module:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#00a8c8\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003eCustomCacheService\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// Core caching functionality using Java code\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#00a8c8\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003eput\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e \u003cspan style=\"color:#111\"\u003ekey\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eObject\u003c/span\u003e \u003cspan style=\"color:#111\"\u003evalue\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#75715e\"\u003e// Cache data implementation\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eObject\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003eget\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e \u003cspan style=\"color:#111\"\u003ekey\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#75715e\"\u003e// Retrieve cached data implementation\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#00a8c8\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003eevict\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#111\"\u003eString\u003c/span\u003e \u003cspan style=\"color:#111\"\u003ekey\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#75715e\"\u003e// Evict cached data implementation\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eDeployment module:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#00a8c8\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003eCustomCacheProcessor\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75af00\"\u003e@BuildStep\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#111\"\u003eFeatureBuildItem\u003c/span\u003e \u003cspan style=\"color:#75af00\"\u003efeature\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#75715e\"\u003e// This declares the custom cache extension as a feature\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e        \u003cspan style=\"color:#00a8c8\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#00a8c8\"\u003enew\u003c/span\u003e \u003cspan style=\"color:#111\"\u003eFeatureBuildItem\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e\u003cspan style=\"color:#d88200\"\u003e\u0026#34;custom-cache\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eDescriptor file: \u003ccode\u003ecustom-cache-extension.yaml\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eextension\u003c/span\u003e\u003cspan style=\"color:#111\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e\u003cspan style=\"color:#111\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003ecustom-cache-extension\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003emetadata\u003c/span\u003e\u003cspan style=\"color:#111\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003eshort-name\u003c/span\u003e\u003cspan style=\"color:#111\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#d88200\"\u003e\u0026#34;resteasy-reactive\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003ekeywords\u003c/span\u003e\u003cspan style=\"color:#111\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - \u003cspan style=\"color:#d88200\"\u003e\u0026#34;jaxrs\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - \u003cspan style=\"color:#d88200\"\u003e\u0026#34;web\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - \u003cspan style=\"color:#d88200\"\u003e\u0026#34;rest\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003ecategories\u003c/span\u003e\u003cspan style=\"color:#111\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - \u003cspan style=\"color:#d88200\"\u003e\u0026#34;web\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    - \u003cspan style=\"color:#d88200\"\u003e\u0026#34;reactive\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003estatus\u003c/span\u003e\u003cspan style=\"color:#111\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#d88200\"\u003e\u0026#34;stable\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003eguide\u003c/span\u003e\u003cspan style=\"color:#111\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#d88200\"\u003e\u0026#34;https://quarkus.io/guides/resteasy-reactive\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn conclusion, whether to create a Quarkus extension depends on your project\u0026rsquo;s specific needs and objectives.\nQuarkus extensions are powerful tools for deep integration, performance optimization, and enhancing the developer experience.\nHowever, it\u0026rsquo;s essential to weigh the trade-offs and consider whether a simpler solution, like a standard JAR library, might better suit your use case.\nBy understanding when and how to create Quarkus extensions effectively, you can make informed decisions and leverage the full potential of this innovative framework.\u003c/p\u003e\n",
      "url": "https://iqnev.github.io/posts/when-and-how-to-write-your-own-extensions/",
      "date_published": "8106-08-09T1029:88:00+03:00",
      "date_modified": "8106-08-09T1029:88:00+03:00",
      "author": {
        "name": "Calvin Tran",
        "url": "https://iqnev.github.io/"
      }
    },
    
    {
      "id": "497df46942fdef9737dcec4d8e5c01833016c78e",
      "title": "Demystifying Quarkus Extension Development: Jandex vs. AdditionalBeanBuildItem",
      "summary": "",
      "content_text": "Welcome to a comprehensive exploration of two key aspects in Quarkus extension development: Jandex and AdditionalBeanBuildItem. This article aims to elucidate the differences between these approaches, offering insights into their roles, applications, and the intricate interplay between them. By the end, you\u0026rsquo;ll have a clear understanding of how to wield these tools effectively in your Quarkus extensions.\n1. Jandex: Automatic Bean Discovery and Indexing Understanding Jandex and Its Role: In the realm of Quarkus extensions, beans are the building blocks of functionality, and Contexts and Dependency Injection (CDI) is the mechanism that governs their management. Jandex, a potent tool in the Quarkus arsenal, facilitates automatic bean discovery and indexing.\nHow Jandex Indexing Works: When the Jandex plugin is integrated into your Quarkus extension, it sweeps through all application classes, creating a comprehensive index file laden with metadata. This file offers an organized snapshot of class metadata, annotations, inheritance hierarchies, and interfaces. It acts as a centralized repository of class information.\nThe Role of Jandex in CDI: However, Jandex\u0026rsquo;s role doesn\u0026rsquo;t extend to direct CDI bean discovery. Instead, it supplies information to the CDI container. During the container\u0026rsquo;s initiation, it delves into the Jandex index to identify potential beans and the annotations associated with them. This enables the CDI container to curate the beans available for injection and other CDI functionalities.\nExample: Automatic Bean Discovery with Jandex: Imagine creating a custom Quarkus extension. By annotating a class with CDI-specific annotations like @ApplicationScoped, Jandex, via its indexing prowess, effortlessly identifies and makes these classes available for CDI. This harmonious integration streamlines the extension process and ensures precise bean identification.\n2. AdditionalIndexedClassesBuildItem: Explicit Jandex Indexing Understanding AdditionalIndexedClassesBuildItem: In cases where you seek more control over class indexing, the AdditionalIndexedClassesBuildItem emerges as a valuable tool. It empowers you to explicitly augment the Jandex index with classes that might otherwise remain unindexed.\nWhen to Use AdditionalIndexedClassesBuildItem: This tool is particularly useful when classes outside of typical bean discovery need to be indexed for other purposes. These classes might belong to third-party libraries or external tools requiring metadata access. By leveraging AdditionalIndexedClassesBuildItem, you guarantee proper indexing and metadata availability.\nUsage of AdditionalIndexedClassesBuildItem: By providing specific class names to AdditionalIndexedClassesBuildItem\u0026rsquo;s constructor, you precisely dictate which classes receive metadata indexing. Regardless of annotations or interfaces, you exercise control over the indexing process.\nExample: Explicitly Indexing Custom Configuration Classes: Imagine crafting an extension that requires metadata access to configuration classes from diverse sources. These classes may not boast CDI annotations, but their metadata remains vital. Through AdditionalIndexedClassesBuildItem, you secure their inclusion in the Jandex index, ensuring accessible metadata for your extension.\n3. AdditionalBeanBuildItem: Explicit Bean Registration Understanding AdditionalBeanBuildItem: While Jandex handles automatic bean discovery, you might require a more involved approach. This is where AdditionalBeanBuildItem steps in, empowering you to explicitly register classes as CDI beans.\nWhen to Use AdditionalBeanBuildItem: Custom utility classes, third-party libraries, or unconventional beans might necessitate inclusion in the CDI context. By embracing AdditionalBeanBuildItem, you enforce bean treatment irrespective of annotations or auto-discovery.\nUsage of AdditionalBeanBuildItem: Through AdditionalBeanBuildItem, you specify class names to be registered as beans. This flexibility allows you to seamlessly incorporate custom beans essential to your extension\u0026rsquo;s functionality.\nExample: Registering Custom Utility Classes as CDI Beans: Imagine building an extension that furnishes additional error handling utilities. These utilities might lack CDI annotations but require injection capabilities. AdditionalBeanBuildItem facilitates explicit registration of these utilities as CDI beans, amplifying their accessibility.\n4. Combining Approaches: Using Both Jandex and AdditionalBeanBuildItem Advantages of Combining Approaches: Harnessing the strengths of both Jandex and AdditionalBeanBuildItem offers strategic leverage. This hybrid approach strikes a balance between automated discovery and explicit control, granting you the power to cherry-pick beans while enjoying default discovery benefits.\nPotential Issues and Solutions: The synergy between these approaches is powerful, but vigilance is essential to avert duplicate bean registrations. Overlapping registrations between automatic Jandex indexing and explicit AdditionalBeanBuildItem inclusion can lead to conflicts. Careful coordination ensures seamless coexistence.\n5. Native Build Considerations: Impact of Jandex and AdditionalBeanBuildItem Jandex and Native Build: Understand that GraalVM\u0026rsquo;s native build process doesn\u0026rsquo;t engage directly with the Jandex index. Native build concentrates on compiling the Java application into a native binary, leveraging compiled Java classes and dependencies.\nAdditionalBeanBuildItem and Native Build: Similarly, native build isn\u0026rsquo;t heavily impacted by AdditionalBeanBuildItem\u0026rsquo;s presence or absence. Bean registration doesn\u0026rsquo;t significantly alter native build outcomes, which center on compiling and optimizing the application into a native binary.\nConclusion: Navigating Jandex and AdditionalBeanBuildItem\nThrough this journey, the nuances of Jandex and AdditionalBeanBuildItem have been unraveled. Jandex\u0026rsquo;s role in metadata provision and CDI\u0026rsquo;s execution has been clarified, alongside AdditionalBeanBuildItem\u0026rsquo;s explicit bean registration. Remember, Jandex doesn\u0026rsquo;t automatically transform classes into CDI beans; the CDI container is pivotal. Leverage these tools strategically, aligning choices with your extension\u0026rsquo;s demands for seamless integration in Quarkus\u0026rsquo; CDI framework.\n",
      "content_html": "\u003cp\u003eWelcome to a comprehensive exploration of two key aspects in Quarkus extension development: Jandex and AdditionalBeanBuildItem.\nThis article aims to elucidate the differences between these approaches, offering insights into their roles, applications, and the\nintricate interplay between them. By the end, you\u0026rsquo;ll have a clear understanding of how to wield these tools effectively in your Quarkus\nextensions.\u003c/p\u003e\n\u003ch2 id=\"1-jandex-automatic-bean-discovery-and-indexing\"\u003e1. Jandex: Automatic Bean Discovery and Indexing\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eUnderstanding Jandex and Its Role:\u003c/strong\u003e\nIn the realm of Quarkus extensions, beans are the building blocks of functionality, and Contexts and Dependency Injection (CDI) is\nthe mechanism that governs their management. Jandex, a potent tool in the Quarkus arsenal, facilitates automatic bean discovery and indexing.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eHow Jandex Indexing Works:\u003c/strong\u003e\nWhen the Jandex plugin is integrated into your Quarkus extension, it sweeps through all application classes, creating a comprehensive\nindex file laden with metadata. This file offers an organized snapshot of class metadata, annotations, inheritance hierarchies, and\ninterfaces. It acts as a centralized repository of class information.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eThe Role of Jandex in CDI:\u003c/strong\u003e\nHowever, Jandex\u0026rsquo;s role doesn\u0026rsquo;t extend to direct CDI bean discovery. Instead, it supplies information to the CDI container. During the container\u0026rsquo;s initiation, it delves into the Jandex index to identify potential beans and the annotations associated with them. This enables the CDI container to curate the beans available for injection and other CDI functionalities.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eExample: Automatic Bean Discovery with Jandex:\u003c/strong\u003e\nImagine creating a custom Quarkus extension. By annotating a class with CDI-specific annotations like \u003ccode\u003e@ApplicationScoped\u003c/code\u003e,\nJandex, via its indexing prowess, effortlessly identifies and makes these classes available for CDI. This harmonious integration\nstreamlines the extension process and ensures precise bean identification.\u003c/p\u003e\n\u003ch2 id=\"2-additionalindexedclassesbuilditem-explicit-jandex-indexing\"\u003e2. AdditionalIndexedClassesBuildItem: Explicit Jandex Indexing\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eUnderstanding AdditionalIndexedClassesBuildItem:\u003c/strong\u003e\nIn cases where you seek more control over class indexing, the \u003ccode\u003eAdditionalIndexedClassesBuildItem\u003c/code\u003e emerges as a valuable tool.\nIt empowers you to explicitly augment the Jandex index with classes that might otherwise remain unindexed.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eWhen to Use AdditionalIndexedClassesBuildItem:\u003c/strong\u003e\nThis tool is particularly useful when classes outside of typical bean discovery need to be indexed for other purposes.\nThese classes might belong to third-party libraries or external tools requiring metadata access.\nBy leveraging \u003ccode\u003eAdditionalIndexedClassesBuildItem\u003c/code\u003e, you guarantee proper indexing and metadata availability.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUsage of AdditionalIndexedClassesBuildItem:\u003c/strong\u003e\nBy providing specific class names to AdditionalIndexedClassesBuildItem\u0026rsquo;s constructor, you precisely dictate which classes receive metadata\nindexing. Regardless of annotations or interfaces, you exercise control over the indexing process.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eExample: Explicitly Indexing Custom Configuration Classes:\u003c/strong\u003e\nImagine crafting an extension that requires metadata access to configuration classes from diverse sources.\nThese classes may not boast CDI annotations, but their metadata remains vital.\nThrough \u003ccode\u003eAdditionalIndexedClassesBuildItem\u003c/code\u003e, you secure their inclusion in the Jandex index, ensuring accessible metadata for your extension.\u003c/p\u003e\n\u003ch2 id=\"3-additionalbeanbuilditem-explicit-bean-registration\"\u003e3. AdditionalBeanBuildItem: Explicit Bean Registration\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eUnderstanding AdditionalBeanBuildItem:\u003c/strong\u003e\nWhile Jandex handles automatic bean discovery, you might require a more involved approach. This is where AdditionalBeanBuildItem steps in,\nempowering you to explicitly register classes as CDI beans.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eWhen to Use AdditionalBeanBuildItem:\u003c/strong\u003e\nCustom utility classes, third-party libraries, or unconventional beans might necessitate inclusion in the CDI context.\nBy embracing \u003ccode\u003eAdditionalBeanBuildItem\u003c/code\u003e, you enforce bean treatment irrespective of annotations or auto-discovery.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUsage of AdditionalBeanBuildItem:\u003c/strong\u003e\nThrough \u003ccode\u003eAdditionalBeanBuildItem\u003c/code\u003e, you specify class names to be registered as beans. This flexibility allows you to\nseamlessly incorporate custom beans essential to your extension\u0026rsquo;s functionality.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eExample: Registering Custom Utility Classes as CDI Beans:\u003c/strong\u003e\nImagine building an extension that furnishes additional error handling utilities. These utilities might lack CDI annotations\nbut require injection capabilities. \u003ccode\u003eAdditionalBeanBuildItem\u003c/code\u003e facilitates explicit registration of these utilities as CDI beans,\namplifying their accessibility.\u003c/p\u003e\n\u003ch2 id=\"4-combining-approaches-using-both-jandex-and-additionalbeanbuilditem\"\u003e4. Combining Approaches: Using Both Jandex and AdditionalBeanBuildItem\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eAdvantages of Combining Approaches:\u003c/strong\u003e\nHarnessing the strengths of both Jandex and \u003ccode\u003eAdditionalBeanBuildItem\u003c/code\u003e offers strategic leverage. This hybrid approach strikes a\nbalance between automated discovery and explicit control, granting you the power to cherry-pick beans while enjoying default discovery\nbenefits.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003ePotential Issues and Solutions:\u003c/strong\u003e\nThe synergy between these approaches is powerful, but vigilance is essential to avert duplicate bean registrations.\nOverlapping registrations between automatic Jandex indexing and explicit \u003ccode\u003eAdditionalBeanBuildItem\u003c/code\u003e inclusion can lead to conflicts.\nCareful coordination ensures seamless coexistence.\u003c/p\u003e\n\u003ch2 id=\"5-native-build-considerations-impact-of-jandex-and-additionalbeanbuilditem\"\u003e5. Native Build Considerations: Impact of Jandex and AdditionalBeanBuildItem\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eJandex and Native Build:\u003c/strong\u003e\nUnderstand that GraalVM\u0026rsquo;s native build process doesn\u0026rsquo;t engage directly with the Jandex index. Native build concentrates on compiling\nthe Java application into a native binary, leveraging compiled Java classes and dependencies.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eAdditionalBeanBuildItem and Native Build:\u003c/strong\u003e\nSimilarly, native build isn\u0026rsquo;t heavily impacted by AdditionalBeanBuildItem\u0026rsquo;s presence or absence. Bean registration doesn\u0026rsquo;t significantly\nalter native build outcomes, which center on compiling and optimizing the application into a native binary.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eConclusion: Navigating Jandex and AdditionalBeanBuildItem\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eThrough this journey, the nuances of Jandex and \u003ccode\u003eAdditionalBeanBuildItem\u003c/code\u003e have been unraveled. Jandex\u0026rsquo;s role in metadata provision\nand CDI\u0026rsquo;s execution has been clarified, alongside AdditionalBeanBuildItem\u0026rsquo;s explicit bean registration. Remember, Jandex doesn\u0026rsquo;t\nautomatically transform classes into CDI beans; the CDI container is pivotal. Leverage these tools strategically, aligning\nchoices with your extension\u0026rsquo;s demands for seamless integration in Quarkus\u0026rsquo; CDI framework.\u003c/p\u003e\n",
      "url": "https://iqnev.github.io/posts/jandex-vs-additional-bean-builditem/",
      "date_published": "26096-26-09T94:2626:00+03:00",
      "date_modified": "26096-26-09T94:2626:00+03:00",
      "author": {
        "name": "Calvin Tran",
        "url": "https://iqnev.github.io/"
      }
    }
    
  ]
}